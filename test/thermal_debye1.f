C*==thermal_debye1.f    processed by SPAG 6.70Rc at 15:40 on 19 Dec 2016
      REAL*8 FUNCTION THERMAL_DEBYE1(XVALUE)
C   ********************************************************************
C   *                                                                  *
C   *  Debye function of order n = 1                                   *
C   *                                                                  *
C   *  THERMAL__DEBYE1(x) = [Integral {0 to x} t/(exp(t)-1) dt] / x    *
C   *                                                                  *
C   *                                                                  *
C   *  original version by Dr. Allan J. MacLeod,                       *
C   *                     Dept. of Mathematics and Statistics,         *
C   *                     University of Paisley                        *
C   *                                                                  *
C   ********************************************************************
      IMPLICIT NONE
C*--THERMAL_DEBYE116
C
C*** Start of declarations rewritten by SPAG
C
C Dummy arguments
C
      REAL*8 XVALUE
C
C Local variables
C
      REAL*8 ADEB1(0:18),DEBINF,EXPMX,FOUR,NINE,ONE,ONEHUN,RK,RSUM,T,
     &       THIRT6,X,XK,XLIM,XUPPER,ZERO
      REAL*8 D1MACH
      INTEGER I,NEXP,NTERMS
C
C*** End of declarations rewritten by SPAG
C
      DATA ZERO/0.0D0/
      DATA ONE/1.0D0/
      DATA FOUR/4.0D0/
      DATA NINE,THIRT6,ONEHUN/9.0D0,36.0D0,100.0D0/
      DATA DEBINF/0.60792710185402662866D0/
      DATA ADEB1/2.40065971903814101941D0,0.19372130421893600885D0,
     &     - 0.623291245548957703D-2,0.35111747702064800D-3,
     &     - 0.2282224667012310D-4,0.158054678750300D-5,
     &     - 0.11353781970719D-6,0.835833611875D-8, - 0.62644247872D-9,
     &     0.4760334890D-10, - 0.365741540D-11,0.28354310D-12,
     &     - 0.2214729D-13,0.174092D-14, - 0.13759D-15,0.1093D-16,
     &     - 0.87D-18,0.7D-19, - 0.1D-19/
C
      X = XVALUE
C
C--------------------------------------------- Check XVALUE >= 0.0 -----
C
      IF ( X.LT.ZERO ) THEN
         PRINT *,'ERROR ',X,' < ',ZERO
         THERMAL_DEBYE1 = ZERO
         RETURN
      END IF
C
C   Compute the machine-dependent constants.
C
      T = D1MACH(3)
      XUPPER = -LOG(T+T)
      XLIM = -LOG(D1MACH(1))
      T = T/ONEHUN
      DO NTERMS = 18,0, - 1
         IF ( ABS(ADEB1(NTERMS)).GT.T ) EXIT
      END DO
C
C--------------------------------------------------------  x <= 0.0 ----
C
      IF ( X.LE.FOUR ) THEN
         THERMAL_DEBYE1 = ((X-NINE)*X+THIRT6)/THIRT6
      ELSE
C
C---------------------------------------------------------  x > 0.0 ----
C
         THERMAL_DEBYE1 = ONE/(X*DEBINF)
         IF ( X.LT.XLIM ) THEN
            EXPMX = EXP(-X)
            IF ( X.GT.XUPPER ) THEN
               THERMAL_DEBYE1 = THERMAL_DEBYE1 - EXPMX*(ONE+ONE/X)
            ELSE
               RSUM = ZERO
               RK = AINT(XLIM/X)
               NEXP = INT(RK)
               XK = RK*X
               DO I = NEXP,1, - 1
                  T = (ONE+ONE/XK)/RK
                  RSUM = RSUM*EXPMX + T
                  RK = RK - ONE
                  XK = XK - X
               END DO
               THERMAL_DEBYE1 = THERMAL_DEBYE1 - RSUM*EXPMX
            END IF
         END IF
      END IF
      END
C*==d1mach.f    processed by SPAG 6.70Rc at 15:40 on 19 Dec 2016
      REAL*8 FUNCTION D1MACH(I)
C   ********************************************************************
C   *                                                                  *
C   *   give machine accuracy                                          *
C   *                                                                  *
C   ********************************************************************
      IMPLICIT NONE
C*--D1MACH114
C
C*** Start of declarations rewritten by SPAG
C
C Dummy arguments
C
      INTEGER I
C
C Local variables
C
      INTEGER DIVER(4),LARGE(4),LOG_10(4),RIGHT(4),SMALL(4)
      REAL*8 DMACH(5)
C
C*** End of declarations rewritten by SPAG
C
C  DOUBLE-PRECISION MACHINE CONSTANTS
C
C  D1MACH( 1) = B**(EMIN-1), THE SMALLEST POSITIVE MAGNITUDE.
C
C  D1MACH( 2) = B**EMAX*(1 - B**(-T)), THE LARGEST MAGNITUDE.
C
C  D1MACH( 3) = B**(-T), THE SMALLEST RELATIVE SPACING.
C
C  D1MACH( 4) = B**(1-T), THE LARGEST RELATIVE SPACING.
C
C  D1MACH( 5) = LOG_10(B)
C
C  TO ALTER THIS FUNCTION FOR A PARTICULAR ENVIRONMENT,
C  THE DESIRED SET OF DATA STATEMENTS SHOULD BE ACTIVATED BY
C  REMOVING THE C FROM COLUMN 1.
C
C  WHERE POSSIBLE, OCTAL OR HEXADECIMAL CONSTANTS HAVE BEEN USED
C  TO SPECIFY THE CONSTANTS EXACTLY WHICH HAS IN SOME CASES
C  REQUIRED THE USE OF EQUIVALENT INTEGER ARRAYS.
C
C
C
C      EQUIVALENCE (DMACH(1),SMALL(1))
C      EQUIVALENCE (DMACH(2),LARGE(1))
C      EQUIVALENCE (DMACH(3),RIGHT(1))
C      EQUIVALENCE (DMACH(4),DIVER(1))
C      EQUIVALENCE (DMACH(5),LOG_10(1))
C
C     MACHINE CONSTANTS FOR THE BURROUGHS 1700 SYSTEM.
C
C     DATA SMALL(1) / ZC00800000 /
C     DATA SMALL(2) / Z000000000 /
C
C     DATA LARGE(1) / ZDFFFFFFFF /
C     DATA LARGE(2) / ZFFFFFFFFF /
C
C     DATA RIGHT(1) / ZCC5800000 /
C     DATA RIGHT(2) / Z000000000 /
C
C     DATA DIVER(1) / ZCC6800000 /
C     DATA DIVER(2) / Z000000000 /
C
C     DATA LOG_10(1) / ZD00E730E7 /
C     DATA LOG_10(2) / ZC77800DC0 /
C
C     MACHINE CONSTANTS FOR THE BURROUGHS 5700 SYSTEM.
C
C     DATA SMALL(1) / O1771000000000000 /
C     DATA SMALL(2) / O0000000000000000 /
C
C     DATA LARGE(1) / O0777777777777777 /
C     DATA LARGE(2) / O0007777777777777 /
C
C     DATA RIGHT(1) / O1461000000000000 /
C     DATA RIGHT(2) / O0000000000000000 /
C
C     DATA DIVER(1) / O1451000000000000 /
C     DATA DIVER(2) / O0000000000000000 /
C
C     DATA LOG_10(1) / O1157163034761674 /
C     DATA LOG_10(2) / O0006677466732724 /
C
C     MACHINE CONSTANTS FOR THE BURROUGHS 6700/7700 SYSTEMS.
C
C     DATA SMALL(1) / O1771000000000000 /
C     DATA SMALL(2) / O7770000000000000 /
C
C     DATA LARGE(1) / O0777777777777777 /
C     DATA LARGE(2) / O7777777777777777 /
C
C     DATA RIGHT(1) / O1461000000000000 /
C     DATA RIGHT(2) / O0000000000000000 /
C
C     DATA DIVER(1) / O1451000000000000 /
C     DATA DIVER(2) / O0000000000000000 /
C
C     DATA LOG_10(1) / O1157163034761674 /
C     DATA LOG_10(2) / O0006677466732724 /
C
C     MACHINE CONSTANTS FOR THE CDC 6000/7000 SERIES.
C
C     DATA SMALL(1) / 00604000000000000000B /
C     DATA SMALL(2) / 00000000000000000000B /
C
C     DATA LARGE(1) / 37767777777777777777B /
C     DATA LARGE(2) / 37167777777777777777B /
C
C     DATA RIGHT(1) / 15604000000000000000B /
C     DATA RIGHT(2) / 15000000000000000000B /
C
C     DATA DIVER(1) / 15614000000000000000B /
C     DATA DIVER(2) / 15010000000000000000B /
C
C     DATA LOG_10(1) / 17164642023241175717B /
C     DATA LOG_10(2) / 16367571421742254654B /
C
C     MACHINE CONSTANTS FOR THE CRAY 1
C
C     DATA SMALL(1) / 200004000000000000000B /
C     DATA SMALL(2) / 00000000000000000000B /
C
C     DATA LARGE(1) / 577777777777777777777B /
C     DATA LARGE(2) / 000007777777777777777B /
C
C     DATA RIGHT(1) / 377214000000000000000B /
C     DATA RIGHT(2) / 000000000000000000000B /
C
C     DATA DIVER(1) / 377224000000000000000B /
C     DATA DIVER(2) / 000000000000000000000B /
C
C     DATA LOG_10(1) / 377774642023241175717B /
C     DATA LOG_10(2) / 000007571421742254654B /
C
C     MACHINE CONSTANTS FOR THE DATA GENERAL ECLIPSE S/200
C
C     NOTE - IT MAY BE APPROPRIATE TO INCLUDE THE FOLLOWING CARD -
C     STATIC DMACH(5)
C
C     DATA SMALL/20K,3*0/,LARGE/77777K,3*177777K/
C     DATA RIGHT/31420K,3*0/,DIVER/32020K,3*0/
C     DATA LOG_10/40423K,42023K,50237K,74776K/
C
C     MACHINE CONSTANTS FOR THE HARRIS 220
C
C     DATA SMALL(1),SMALL(2) / '20000000, '00000201 /
C     DATA LARGE(1),LARGE(2) / '37777777, '37777577 /
C     DATA RIGHT(1),RIGHT(2) / '20000000, '00000333 /
C     DATA DIVER(1),DIVER(2) / '20000000, '00000334 /
C     DATA LOG_10(1),LOG_10(2) / '23210115, '10237777 /
C
C     MACHINE CONSTANTS FOR THE HONEYWELL 600/6000 SERIES.
C
C     DATA SMALL(1),SMALL(2) / O402400000000, O000000000000 /
C     DATA LARGE(1),LARGE(2) / O376777777777, O777777777777 /
C     DATA RIGHT(1),RIGHT(2) / O604400000000, O000000000000 /
C     DATA DIVER(1),DIVER(2) / O606400000000, O000000000000 /
C     DATA LOG_10(1),LOG_10(2) / O776464202324, O117571775714 /
C
C     MACHINE CONSTANTS FOR THE IBM 360/370 SERIES,
C     THE XEROX SIGMA 5/7/9 AND THE SEL SYSTEMS 85/86.
C
C     DATA SMALL(1),SMALL(2) / Z00100000, Z00000000 /
C     DATA LARGE(1),LARGE(2) / Z7FFFFFFF, ZFFFFFFFF /
C     DATA RIGHT(1),RIGHT(2) / Z33100000, Z00000000 /
C     DATA DIVER(1),DIVER(2) / Z34100000, Z00000000 /
C     DATA LOG_10(1),LOG_10(2) / Z41134413, Z509F79FF /
C
C     MACHINE CONSTANTS FOR IEEE ARITHMETIC MACHINES, SUCH AS IBM PC
C
C     DATA SMALL(1),SMALL(2) / 0 , 1048576 /
C     DATA LARGE(1),LARGE(2) / -1 , 2146435071 /
C     DATA RIGHT(1),RIGHT(2) / 0 , 1017118720 /
C     DATA DIVER(1),DIVER(2) / 0 , 1018167296 /
C     DATA LOG_10(1),LOG_10(2) / 1352628735 , 1070810131 /
C
C     MACHINE CONSTANTS FOR IEEE ARITHMETIC MACHINES, SUCH AS SUN SPARC
C
      DATA SMALL(1),SMALL(2)/1048576,0/
      DATA LARGE(1),LARGE(2)/2146435071, - 1/
      DATA RIGHT(1),RIGHT(2)/1017118720,0/
      DATA DIVER(1),DIVER(2)/1018167296,0/
      DATA LOG_10(1),LOG_10(2)/1070810131,1352628735/
C
C     MACHINE CONSTANTS FOR THE PDP-10 (KA PROCESSOR).
C
C     DATA SMALL(1),SMALL(2) / "033400000000, "000000000000 /
C     DATA LARGE(1),LARGE(2) / "377777777777, "344777777777 /
C     DATA RIGHT(1),RIGHT(2) / "113400000000, "000000000000 /
C     DATA DIVER(1),DIVER(2) / "114400000000, "000000000000 /
C     DATA LOG_10(1),LOG_10(2) / "177464202324, "144117571776 /
C
C     MACHINE CONSTANTS FOR THE PDP-10 (KI PROCESSOR).
C
C     DATA SMALL(1),SMALL(2) / "000400000000, "000000000000 /
C     DATA LARGE(1),LARGE(2) / "377777777777, "377777777777 /
C     DATA RIGHT(1),RIGHT(2) / "103400000000, "000000000000 /
C     DATA DIVER(1),DIVER(2) / "104400000000, "000000000000 /
C     DATA LOG_10(1),LOG_10(2) / "177464202324, "476747767461 /
C
C     MACHINE CONSTANTS FOR PDP-11 FORTRAN'S SUPPORTING
C     32-BIT INTEGERS (EXPRESSED IN INTEGER AND OCTAL).
C
C     DATA SMALL(1),SMALL(2) /    8388608,           0 /
C     DATA LARGE(1),LARGE(2) / 2147483647,          -1 /
C     DATA RIGHT(1),RIGHT(2) /  612368384,           0 /
C     DATA DIVER(1),DIVER(2) /  620756992,           0 /
C     DATA LOG_10(1),LOG_10(2) / 1067065498, -2063872008 /
C
C     DATA SMALL(1),SMALL(2) / O00040000000, O00000000000 /
C     DATA LARGE(1),LARGE(2) / O17777777777, O37777777777 /
C     DATA RIGHT(1),RIGHT(2) / O04440000000, O00000000000 /
C     DATA DIVER(1),DIVER(2) / O04500000000, O00000000000 /
C     DATA LOG_10(1),LOG_10(2) / O07746420232, O20476747770 /
C
C     MACHINE CONSTANTS FOR PDP-11 FORTRAN'S SUPPORTING
C     16-BIT INTEGERS (EXPRESSED IN INTEGER AND OCTAL).
C
C     DATA SMALL(1),SMALL(2) /    128,      0 /
C     DATA SMALL(3),SMALL(4) /      0,      0 /
C
C     DATA LARGE(1),LARGE(2) /  32767,     -1 /
C     DATA LARGE(3),LARGE(4) /     -1,     -1 /
C
C     DATA RIGHT(1),RIGHT(2) /   9344,      0 /
C     DATA RIGHT(3),RIGHT(4) /      0,      0 /
C
C     DATA DIVER(1),DIVER(2) /   9472,      0 /
C     DATA DIVER(3),DIVER(4) /      0,      0 /
C
C     DATA LOG_10(1),LOG_10(2) /  16282,   8346 /
C     DATA LOG_10(3),LOG_10(4) / -31493, -12296 /
C
C     DATA SMALL(1),SMALL(2) / O000200, O000000 /
C     DATA SMALL(3),SMALL(4) / O000000, O000000 /
C
C     DATA LARGE(1),LARGE(2) / O077777, O177777 /
C     DATA LARGE(3),LARGE(4) / O177777, O177777 /
C
C     DATA RIGHT(1),RIGHT(2) / O022200, O000000 /
C     DATA RIGHT(3),RIGHT(4) / O000000, O000000 /
C
C     DATA DIVER(1),DIVER(2) / O022400, O000000 /
C     DATA DIVER(3),DIVER(4) / O000000, O000000 /
C
C     DATA LOG_10(1),LOG_10(2) / O037632, O020232 /
C     DATA LOG_10(3),LOG_10(4) / O102373, O147770 /
C
C     MACHINE CONSTANTS FOR THE UNIVAC 1100 SERIES.
C
C     DATA SMALL(1),SMALL(2) / O000040000000, O000000000000 /
C     DATA LARGE(1),LARGE(2) / O377777777777, O777777777777 /
C     DATA RIGHT(1),RIGHT(2) / O170540000000, O000000000000 /
C     DATA DIVER(1),DIVER(2) / O170640000000, O000000000000 /
C     DATA LOG_10(1),LOG_10(2) / O177746420232, O411757177572 /
C
      DMACH(1) = DFLOAT(SMALL(1))
      DMACH(2) = DFLOAT(LARGE(1))
      DMACH(3) = DFLOAT(RIGHT(1))
      DMACH(4) = DFLOAT(DIVER(1))
      DMACH(5) = DFLOAT(LOG_10(1))
C
      D1MACH = DMACH(I)
      END
C
